#
# Copyright (c) 2023, 2025 Oracle and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Validate"

on:
  pull_request:
  push:
    branches-ignore: [ 'main', 'helidon-*.x', 'release-*' ]
    tags-ignore: [ '**' ]
  workflow_call:
    inputs:
      ref:
        description: The branch, tag or SHA to checkout
        required: false
        type: string
        default: ''

env:
  JAVA_VERSION: 21
  JAVA_DISTRO: oracle
  GRAALVM_VERSION: 21.3.3.1
  MVN_ARGS: |
    -B -fae -e
    -Dmaven.wagon.httpconnectionManager.ttlSeconds=60
    -Dmaven.wagon.http.retryHandler.count=3
    -Djdk.toolchain.version=${JAVA_VERSION}
    -Dcache.enabled=true

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  copyright:
    timeout-minutes: 5
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0
      - uses: ./.github/actions/common
        with:
          run: etc/scripts/copyright.sh
  checkstyle:
    timeout-minutes: 5
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/common
        with:
          run: etc/scripts/checkstyle.sh
  shellcheck:
    timeout-minutes: 5
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/common
        with:
          maven-cache: none
          run: etc/scripts/shellcheck.sh
  build:
    timeout-minutes: 15
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - id: build
        uses: ./.github/actions/common
        with:
          build-cache: read-write
          maven-cache: read-write
          run: |
            mvn --version
            mvn ${MVN_ARGS} build-cache:go-offline
            mvn ${MVN_ARGS} -T8 \
              -Dorg.slf4j.simpleLogger.showThreadName=true \
              -DskipTests \
              -P tests \
              install
  tests:
    needs: build
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ ubuntu-24.04, windows-2022 ]
        include:
          - { os: ubuntu-24.04, platform: linux }
          - { os: windows-2022, platform: windows }
    runs-on: ${{ matrix.os }}
    name: tests/${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/common
        with:
          build-cache: read-only
          test-artifact-name: tests--${{ matrix.os }}
          run: |
            mvn ${MVN_ARGS} \
              -DreactorRule=tests \
              -Dsurefire.reportNameSuffix=${{ matrix.platform }} \
              verify
  spotbugs:
    needs: build
    timeout-minutes: 15
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/common
        with:
          build-cache: read-only
          run: |
            mvn ${MVN_ARGS} -T 8 \
              -DskipTests \
              -Pspotbugs,build-cache \
              verify
  javadoc:
    needs: build
    timeout-minutes: 15
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/actions/common
        with:
          build-cache: read-only
          run: |
            mvn ${MVN_ARGS} -T 8 \
              -DskipTests \
              -Pjavadoc,build-cache \
              package
  test-results:
    # TODO: enable this when we have tests
    if: false
    runs-on: ubuntu-24.04
    needs: [ tests ]
    name: tests/results
    steps:
      - uses: actions/upload-artifact/merge@v4
        with:
          name: test-results
          pattern: "*test*"
  gate:
    runs-on: ubuntu-24.04
    needs: [ copyright, checkstyle, shellcheck, spotbugs, javadoc, test-results ]
    steps:
      - shell: bash
        run: |
          echo OK
